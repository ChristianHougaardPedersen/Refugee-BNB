@page "/ManageHousingHost"
@using global::Shared.Domain
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@inject HousingInterface HousingInterface
@inject AuthInterface authService;
@inject DialogService dialogService;

<PageTitle>My Housing</PageTitle>


<h3>Manage Housing Host</h3>




    @foreach (Housing housing in myHousing)
{
    <div class="card" style="width: 700px">
        <div class="col-lg-12 product-title">
            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-color-secondary">House</RadzenText>
        </div>
        <div >
            <div class="row d-flex">
                <div class="col-lg-2 col-lg-">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Country</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.Country)</RadzenText>
                </div>
                <div class="col-lg-2 ">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">City</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.City)</RadzenText>
                </div>
                <div class="col-lg-2 ">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Street</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.StreetName)</RadzenText>
                </div>
                <div class="col-lg-2">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">House Number</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.HouseNumber)</RadzenText>
                </div>
                <div class="col-lg-2">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Room Number</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address?.RoomNumber)</RadzenText>
                </div>
                <div class="col-lg-2">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Post code</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.PostCode)</RadzenText>
                </div>
            </div>
            <div>
                <button class="applyBtn" @onclick="args => DeleteAsync(housing)">Delete</button>
            </div>
<AuthorizeView>
    <Authorized>
        
        <div class="card" style="width: 700px">
            <RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.H4">My Housing</RadzenText>
            <RadzenDataList WrapItems="true" AllowPaging="true" Data="@myHousing" TItem="Housing" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
                <Template Context="housing">
                    <RadzenCard Style="width: 100%;" class="p-2">
                        <div class="col-lg-12 product-title">
                            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-color-secondary">House</RadzenText>
                        </div>
                        <div class="row d-flex">
                            <div class="col-lg">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Country</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.Country)</RadzenText>
                            </div>
                            <div class="col ">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">City</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.City)</RadzenText>
                            </div>
                            <div class="col ">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Street</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.StreetName)</RadzenText>
                            </div>
                            <div class="col">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">House Number</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.HouseNumber)</RadzenText>
                            </div>
                            <div class="col">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Room Number</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address?.RoomNumber)</RadzenText>
                            </div>
                            <div class="col">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Post code</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.PostCode)</RadzenText>
                            </div>
                            <div class="col">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Available</RadzenText>
                                @if (@housing.Available)
                                {
                                    <RadzenIcon Icon="check_circle_outline" IconStyle="IconStyle.Success"></RadzenIcon>
                                }
                                else
                                {
                                    <RadzenIcon Icon="highlight_off" IconStyle="IconStyle.Danger"></RadzenIcon>
                                }
                            </div>
                        </div>
                        @if (@housing.Available)
                        {
                            <div>
                                <button class="applyBtn" @onclick="args => DeleteAsync(housing)">Delete</button>
                            </div>
                        }
                    </RadzenCard>
                </Template>
            </RadzenDataList>
            <RadzenAlert AlertStyle=@alertStyle Visible="@showAlert">@resultMsg</RadzenAlert>
        </div>
    </Authorized>
    <NotAuthorized>
        <RadzenCard>
            <RadzenText>You need to be logged in to view this page.</RadzenText>
            <RadzenImage Path="images/unauthorized.jpg"></RadzenImage>
        </RadzenCard>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<Housing> myHousing = new List<Housing>();
    private string resultMsg = "";
    private string color = "";
    private bool showAlert = false;
    private AlertStyle alertStyle;

    protected override async Task OnInitializedAsync()
    {
       await base.OnInitializedAsync();
        await UpdateList();
    }
    
    private async Task DeleteAsync(Housing housing)
    {
        try
        {
            HousingDTO deletedHousing = await HousingInterface.RemoveHousingAsync(new HousingIdDTO(housing.HousingId, authService.GetEmail(), ""));
            await UpdateList();

            await dialogService.Alert("Housing deleted successfully");
        }
        catch (Exception e)
        {
            await dialogService.Alert(e.Message, "Error");
        }
    }

    private async Task UpdateList()
    {
        showAlert = false;
        try
        {
            HousingListDTO dto = await HousingInterface.GetHousingByHostIdAsync(authService.GetEmail());
            myHousing = dto.HousingList;
        }
        catch (Exception e)
        {
            alertStyle = AlertStyle.Warning;
            showAlert = true;
            resultMsg = e.Message;
        }


    }

}