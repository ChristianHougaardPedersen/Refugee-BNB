@page "/ManageAccount"
@using LogicForPages
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
<h3>Manage your account</h3>
@inject MenuService MenuService;
@inject RefugeeInterface RefugeeInterface;
@inject HostInterface HostInterface;
@inject NavigationManager NavigationManager;
<div class="help">
    <div class="help-text">
        <div class="firstname">First name:</div>
        <div class="middlename">Middle name:</div>
        <div class="lastname">Last name:</div>
        <div class="nationality">Nationality:</div>
        <div class="nationality">Gender:</div>
    </div>
</div>
<div class="help">
    <div class="help-text">
        <div class="help-title">Logging out?</div>
        <div class="description"></div>
    </div>
    <div class="provide-help">
        <RadzenButton Style="color: white; font-weight: bold; background-color: #386761; margin-bottom: 10px" ButtonType="ButtonType.Submit" Text="Logout" Click="@Logout"/>
    </div>
</div>
<div class="help">
    <div class="help-text">
        <div class="help-title">Update your account:</div>
        <div class="description"></div>
    </div>
    <div class="provide-help">
        <RadzenButton Style="color: white; font-weight: bold; background-color: #386761; margin-bottom: 10px" ButtonType="ButtonType.Submit" Text="Update personal information" Click="@Update"/>
    </div>
</div>
<div class="help">
    <div class="help-text">
        <div class="help-title">Delete your account:</div>
        <div class="description"></div>
    </div>
    <div class="provide-help">
         <RadzenButton Style="color: white; font-weight: bold; background-color: #386761; margin-bottom: 18px" ButtonType="ButtonType.Submit" Text="Delete my account" Click="@DeleteAccountAsync"/>
    </div>
</div>


@code {

    private string resultMsg = "";
    private string color = "";

    private void Logout()
    {
        MenuService.Host = false;
        MenuService.Refugee = false;
    }

    private async void DeleteAccountAsync()
    {
        if (MenuService.Host)
        {
            HostDTO dto = await HostInterface.DeleteAccountAsync(MenuService.HostLogged);
            if (dto.ErrorMessage.Equals(null))
            {
                resultMsg = dto.ErrorMessage;
                color = "red";
            }
            else
            {
                resultMsg = "You have deleted your account";
                color = "green";
            }
        }
        else if (MenuService.Refugee)
        {
            Console.WriteLine(MenuService.RefugeeLogged);
            
            RefugeeDTO dto = await RefugeeInterface.DeleteAccountAsync(MenuService.RefugeeLogged);
            if (dto.ErrorMessage.Equals(null))
            {
                //todo change to nav manager go to main page with no user logged in.
                resultMsg = dto.ErrorMessage;
                color = "red";
            }
            else
            {
                resultMsg = "You have deleted your account";
                color = "green";
            }
        }
        else
        {
            resultMsg = "No one is currently logged in";
            color = "red";
        }
    }

    private void Update()
    {
        NavigationManager.NavigateTo("/Update");
    }

}