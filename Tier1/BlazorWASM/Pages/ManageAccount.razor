@page "/ManageAccount"
@using LogicForPages
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
@using System.Security.Claims
<h3>ManageAccount</h3>
@inject RefugeeInterface RefugeeInterface;
@inject HostInterface HostInterface;
@inject AuthInterface authService;
@inject NavigationManager navMgr;


<div class="card">
    <div class="form-group field">
        <RadzenButton Style="color: white; font-weight: bold; background-color: #6a1a21" ButtonType="ButtonType.Submit" Text="Delete my account" Click="@DeleteAccountAsync"/>
        <br/>

        <RadzenButton Style="color: white; font-weight: bold; background-color: #6a1a21" ButtonType="ButtonType.Submit" Text="Logout" Click="@Logout"/>
        <label style="color: @color">@resultMsg</label>
    </div>
</div>


@code {

    private string resultMsg = "";
    private string color = "";

    private async void Logout()
    {
        await authService.LogoutAsync();
        navMgr.NavigateTo("/");
    }

    private async void DeleteAccountAsync()
    {
        string email = authService.GetAuthAsync().Result.Claims.First().Value;
        Console.WriteLine(email);

        if (authService.GetAuthAsync().Result.Claims.Any(claim => claim.Value.Equals("HOST")))
        {
            
            
            HostDTO dto = await HostInterface.DeleteAccountAsync(email);
            if (dto.ErrorMessage.Equals(null))
            {
                resultMsg = dto.ErrorMessage;
                color = "red";
            }
            else
            {
                resultMsg = "You have deleted your account";
                color = "green";
            }
            
        }
        
        else if (authService.GetAuthAsync().Result.Claims.Any(claim => claim.Value.Equals("REFUGEE")))
        {
            
            RefugeeDTO dto = await RefugeeInterface.DeleteAccountAsync(email);
            if (dto.ErrorMessage.Equals(null))
            {
                //todo change to nav manager go to main page with no user logged in.
                resultMsg = dto.ErrorMessage;
                color = "red";
            }
            else
            {
                resultMsg = "You have deleted your account";
                color = "green";
            }
         
        }
        else
        {
            resultMsg = "No one is currently logged in";
            color = "red";
        }
       
        
    }
    

}