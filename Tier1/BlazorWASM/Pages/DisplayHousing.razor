@page "/DisplayHousing"
@using System.Collections.ObjectModel
@using global::Shared.Domain
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@using UIComponents
@inject HousingInterface HousingInterface
@inject AgreementInterface AgreementInterface
@inject HostInterface HostInterface;


<h3>DisplayHousing</h3>

@foreach (Housing housing in allHousing)
{
    <div class="card" style="width: 700px">
        <div class="col-lg-12 product-title">
            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-color-secondary">House</RadzenText>
        </div>
        <div >
            <div class="row d-flex">
                <div class="col-lg-2 col-lg-">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Country</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.Country)</RadzenText>
                </div>
                <div class="col-lg-2 ">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">City</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.City)</RadzenText>
                </div>
                <div class="col-lg-2 ">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Street</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.StreetName)</RadzenText>
                </div>
                <div class="col-lg-2">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">House Number</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.HouseNumber)</RadzenText>
                </div>
                <div class="col-lg-2">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Room Number</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address?.RoomNumber)</RadzenText>
                </div>
                <div class="col-lg-2">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Post code</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(housing.Address.PostCode)</RadzenText>
                </div>
            </div>
            <div>
                <button class="applyBtn" @onclick="args => Apply(housing)">Apply for</button>
            </div>
        </div>
    </div>
}

<label style="color: @color">@resultMsg</label>

<Modal ShowModal="showModal">
    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-1">Are you sure you want to apply for that housing?</RadzenText><br/>
    <p>
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">@ownerEmail</RadzenText>
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">@selectedHousing.Address.Country</RadzenText>
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">@selectedHousing.Address.City</RadzenText>
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">@selectedHousing.Address.StreetName</RadzenText>
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">@selectedHousing.Address.HouseNumber</RadzenText>
        @if (!selectedHousing.Address.RoomNumber.Equals(""))
        {
            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">@selectedHousing.Address.RoomNumber</RadzenText>
        }
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">@selectedHousing.Address.PostCode</RadzenText>
    </p>
    <label style="color: @color">@resultMsg</label>
    <div>
        <RadzenButton Text="Confirm" Click="@Confirm"/>
        <RadzenButton Text="Cancel" Click="@Cancel"/>
    </div>
</Modal>

@code {
    private Collection<Housing> allHousing;
    private string resultMsg = "";
    private string color = "";
    private Housing selectedHousing = new Housing();
    private string ownerEmail = "";
    private bool showModal;

    protected override async void OnInitialized()
    {
        
        HousingListDTO dto = await HousingInterface.GetAvailableHousing();
        if (dto.ErrorMessage.Equals(""))
        {
            allHousing = dto.HousingList;
            resultMsg = "";
        }
        else
        {
            resultMsg = dto.ErrorMessage;
            color = "red";
        }
        
        
    /*
        allHousing = new Collection<Housing>()
        {
            new Housing(3, new Address("Poland", "Poznan", "Topolowa", "5", "", "62-069")),
            new Housing(3, new Address("Poland", "Poznan", "Topolowa", "5", "", "62-069")),
            new Housing(3, new Address("Poland", "Poznan", "Topolowa", "5", "", "62-069"))
        };
        */
    }


    private async void Confirm()
    {
    //todo retrieve the refugee email from authentication stuff
        
        RequestAgreementDTO dto = await AgreementInterface.RequestAgreement(new RequestAgreementDTO("refugeeEmail@gmail.com",ownerEmail, selectedHousing,"" ));
        
        
        if (dto.ErrorMessage.Equals(""))
        {
            showModal = false;
            resultMsg = "";
        }
        else
        {
            resultMsg = dto.ErrorMessage;
            color = "red";
        }

    }

    private async Task Apply(Housing housing)
    {
        /*HostDTO owner = await HostInterface.GetHostByHousingId(selectedHousing.HousingId);
        if (owner.ErrorMessage.Equals(""))
        {
            ownerEmail = owner.Host.Email;
            resultMsg = "";
        }
        else
        {
            resultMsg = owner.ErrorMessage;
            color = "red";
        }
        */
        ownerEmail = "owneremail@gmail.com";
        selectedHousing = housing;
        Console.WriteLine("Selected housing changed to " + selectedHousing.Address.City + ", " + selectedHousing.Address.HouseNumber);
        showModal = true;
    }

    private void Cancel()
    {
        showModal = false;
    }

}