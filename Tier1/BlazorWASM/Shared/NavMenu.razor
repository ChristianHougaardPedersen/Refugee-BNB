@using global::Shared.Domain
@using System.Dynamic
@using System.Security.Claims
@using HttpClients.ClientInterfaces
@using LogicForPages
@inject AuthInterface authService;
@inject MenuService MenuService;
@implements IDisposable;


<!-- IF NOT LOGGED IN -->


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">RefugeeBnB</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

    <nav class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <AuthorizeView>
        <NotAuthorized>
                <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="fa fa-home m-lg-2" aria-hidden="true"></span> Home
            </NavLink>
        </div>


            
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Register" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Register
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Login" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Login
            </NavLink>
        </div>
    
        </NotAuthorized>


          
            <Authorized>

                <!-- HOST -->
                @if (@context.User.Claims.Any(claim => claim.Value.Equals("HOST")))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/AddHousing" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Add Housing
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/ManageHousingHost" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> My Housing
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Agreements" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Agreements
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/ManageAccount" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> My Account
                        </NavLink>
                    </div>
                }

                <!-- REFUGEE -->
                @if (@context.User.Claims.Any(claim => claim.Value.Equals("REFUGEE")))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/DisplayHousing" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Display Housing
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Agreements" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Agreements
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/ManageAccount" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> My Account
                        </NavLink>
                    </div>
                }
                
            </Authorized>
            </AuthorizeView>
  </nav>
      </nav>
    
        


@code {

    private bool collapseNavMenu = true;


    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    

    protected override void OnInitialized()
    {
        MenuService.OnChange += StateHasChanged;
        Console.WriteLine("OnInitialized");
    }

    public void Dispose()
    {
        MenuService.OnChange -= StateHasChanged;
    }


}